
##Parker figure 1G

##generate all kmers sequences for given alphabet
generateAllKmers <- function(k, alphabet=c("A", "C", "G", "T"))
  {
    require(Biostrings)
    L <- length(alphabet)    
    kmers <- matrix(NA, nrow=L^k, ncol=k)    
    for(i in 1:k)   
      kmers[,i] <- rep(alphabet, each=L^(i-1))    
    DNAStringSet(apply(kmers, 1, paste0, collapse=""))    
  }

generateAllKmers <- function(k, alphabet=c("A", "C", "G", "T"))
  {
    require(Biostrings)
    L <- length(alphabet)    
    kmers <- matrix(NA, nrow=L^k, ncol=k)    
    for(i in 1:k)   
      kmers[,i] <- rep(alphabet, each=L^(i-1))

    ##swap first column to the middle
    col1 <- kmers[,1]
    col2 <- kmers[,floor(k/2)+1]

    kmers[,1] <- col2
    kmers[,floor(k/2)+1] <- col1
    
    DNAStringSet(apply(kmers, 1, paste0, collapse=""))    
  }

kmer7 <- generateAllKmers(7, alphabet=c("A", "C", "G", "T"))
kmer7
kmer11 <- generateAllKmers(11, alphabet=c("A", "C", "G", "T"))
kmer11

writeXStringSet(kmer7, file="kmer7seq.txt")

ifile <- file.path(getwd(), "kmer7seq.txt")
predictDNAShapes(ifile)

ofiles <- list.files(path=dirname(ifile), pattern="kmer7seq")[-1]
ofiles
i <- 2

##too slow use linux
##shape <- readShape(file.path(dirname(ifile), ofiles[i]))

file <- file.path(dirname(ifile), ofiles[i])
shape <- read.table(pipe(paste("sed '/>/d'", file)), sep=",")
dim(shape)

str(shape)
dim(shape)
head(shape)

reducedShape <- shape[, c(-c(1:2), -c((ncol(shape)-1):ncol(shape)))]
dim(reducedShape)




